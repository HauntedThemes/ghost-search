{"version":3,"names":[],"mappings":"","sources":["ghost-search.js"],"sourcesContent":["'use strict';\n/**\r\n * @requires ../node_modules/fuzzysort/fuzzysort.js\r\n */\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar GhostSearch =\n/*#__PURE__*/\nfunction () {\n  function GhostSearch(args) {\n    _classCallCheck(this, GhostSearch);\n\n    this.check = false;\n    var defaults = {\n      input: '#ghost-search-field',\n      results: '#ghost-search-results',\n      button: '',\n      development: false,\n      template: function template(result) {\n        var url = [location.protocol, '//', location.host].join('');\n        return '<a href=\"' + url + '/' + result.slug + '/\">' + result.title + '</a>';\n      },\n      trigger: 'focus',\n      options: {\n        keys: ['title'],\n        limit: 10,\n        threshold: -3500,\n        allowTypo: false\n      },\n      api: {\n        resource: 'posts',\n        parameters: {\n          limit: 'all',\n          fields: ['title', 'slug'],\n          filter: '',\n          include: '',\n          order: '',\n          formats: ''\n        }\n      },\n      on: {\n        beforeDisplay: function beforeDisplay() {},\n        afterDisplay: function afterDisplay(results) {},\n        beforeFetch: function beforeFetch() {},\n        afterFetch: function afterFetch(results) {}\n      }\n    };\n    var merged = this.mergeDeep(defaults, args);\n    Object.assign(this, merged);\n    this.init();\n  }\n\n  _createClass(GhostSearch, [{\n    key: \"mergeDeep\",\n    value: function mergeDeep(target, source) {\n      var _this = this;\n\n      if (target && _typeof(target) === 'object' && !Array.isArray(target) && target !== null && source && _typeof(source) === 'object' && !Array.isArray(source) && source !== null) {\n        Object.keys(source).forEach(function (key) {\n          if (source[key] && _typeof(source[key]) === 'object' && !Array.isArray(source[key]) && source[key] !== null) {\n            if (!target[key]) Object.assign(target, _defineProperty({}, key, {}));\n\n            _this.mergeDeep(target[key], source[key]);\n          } else {\n            Object.assign(target, _defineProperty({}, key, source[key]));\n          }\n        });\n      }\n\n      return target;\n    }\n  }, {\n    key: \"url\",\n    value: function url() {\n      if (this.api.resource == 'posts' && this.api.parameters.include.match(/(tags|authors)/)) {\n        delete this.api.parameters.fields;\n      }\n\n      ;\n      var url = ghost.url.api(this.api.resource, this.api.parameters);\n      return url;\n    }\n  }, {\n    key: \"fetch\",\n    value: function (_fetch) {\n      function fetch() {\n        return _fetch.apply(this, arguments);\n      }\n\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n\n      return fetch;\n    }(function () {\n      var _this2 = this;\n\n      var url = this.url();\n      this.on.beforeFetch();\n      fetch(url).then(function (response) {\n        return response.json();\n      }).then(function (resource) {\n        return _this2.search(resource);\n      }).catch(function (error) {\n        return console.error(\"Fetch Error =\\n\", error);\n      });\n    })\n  }, {\n    key: \"createElementFromHTML\",\n    value: function createElementFromHTML(htmlString) {\n      var div = document.createElement('div');\n      div.innerHTML = htmlString.trim();\n      return div.firstChild;\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup(input) {\n      return input.toLowerCase().replace(/[^a-zA-Z0-9]+/g, \"-\");\n    }\n  }, {\n    key: \"displayResults\",\n    value: function displayResults(data) {\n      if (document.querySelectorAll(this.results)[0].firstChild !== null && document.querySelectorAll(this.results)[0].firstChild !== '') {\n        while (document.querySelectorAll(this.results)[0].firstChild) {\n          document.querySelectorAll(this.results)[0].removeChild(document.querySelectorAll(this.results)[0].firstChild);\n        }\n      }\n\n      ;\n      var inputValue = document.querySelectorAll(this.input)[0].value;\n      var results = fuzzysort.go(inputValue, data, {\n        keys: this.options.keys,\n        limit: this.options.limit,\n        allowTypo: this.options.allowTypo,\n        threshold: this.options.threshold\n      });\n\n      for (var key in results) {\n        if (key < results.length) {\n          document.querySelectorAll(this.results)[0].appendChild(this.createElementFromHTML(this.template(results[key].obj)));\n        }\n\n        ;\n      }\n\n      this.on.afterDisplay(results);\n    }\n  }, {\n    key: \"search\",\n    value: function search(resource) {\n      var _this3 = this;\n\n      var data = resource[this.api.resource];\n      this.on.afterFetch(data);\n      this.check = true;\n\n      if (this.button != '') {\n        var button = document.querySelectorAll(this.button)[0];\n\n        if (button.tagName == 'INPUT' && button.type == 'submit') {\n          button.closest('form').addEventListener(\"submit\", function (e) {\n            e.preventDefault();\n          });\n        }\n\n        ;\n        button.addEventListener('click', function (e) {\n          e.preventDefault();\n\n          _this3.on.beforeDisplay();\n\n          _this3.displayResults(data);\n        });\n      } else {\n        document.querySelectorAll(this.input)[0].addEventListener('keyup', function (e) {\n          _this3.on.beforeDisplay();\n\n          _this3.displayResults(data);\n        });\n      }\n\n      ;\n    }\n  }, {\n    key: \"checkGhostAPI\",\n    value: function checkGhostAPI() {\n      if (typeof ghost === 'undefined') {\n        console.log('Ghost API is not enabled');\n        return false;\n      }\n\n      ;\n      return true;\n    }\n  }, {\n    key: \"checkElements\",\n    value: function checkElements() {\n      if (!document.querySelectorAll(this.input).length) {\n        console.log('Input not found.');\n        return false;\n      }\n\n      if (!document.querySelectorAll(this.results).length) {\n        console.log('Results not found.');\n        return false;\n      }\n\n      ;\n\n      if (this.button != '') {\n        if (!document.querySelectorAll(this.button).length) {\n          console.log('Button not found.');\n          return false;\n        }\n\n        ;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkFields\",\n    value: function checkFields() {\n      var validFields = [];\n\n      if (this.api.resource == 'posts') {\n        validFields = ['amp', 'authors', 'codeinjection_foot', 'codeinjection_head', 'comment_id', 'created_at', 'created_by', 'custom_excerpt', 'custom_template', 'feature_image', 'featured', 'html', 'id', 'locale', 'meta_description', 'meta_title', 'mobiledoc', 'og_description', 'og_image', 'og_title', 'page', 'plaintext', 'primary_author', 'primary_tag', 'published_at', 'published_by', 'slug', 'status', 'tags', 'title', 'twitter_description', 'twitter_image', 'twitter_title', 'updated_at', 'updated_by', 'url', 'uuid', 'visibility'];\n      } else if (this.api.resource == 'tags') {\n        validFields = ['count', 'created_at', 'created_by', 'description', 'feature_image', 'id', 'meta_description', 'meta_title', 'name', 'parent', 'slug', 'updated_at', 'updated_by', 'visibility'];\n      } else if (this.api.resource == 'users') {\n        validFields = ['accessibility', 'bio', 'count', 'cover_image', 'facebook', 'id', 'locale', 'location', 'meta_description', 'meta_title', 'name', 'profile_image', 'slug', 'tour', 'twitter', 'visibility', 'website'];\n      }\n\n      for (var i = 0; i < this.api.parameters.fields.length; i++) {\n        if (!validFields.includes(this.api.parameters.fields[i])) {\n          console.log('\\'' + this.api.parameters.fields[i] + '\\' is not a valid field for ' + this.api.resource + '. Valid fields for ' + this.api.resource + ': [\\'' + validFields.join('\\', \\'') + '\\']');\n        }\n      }\n    }\n  }, {\n    key: \"checkFormats\",\n    value: function checkFormats() {\n      if (this.api.resource == 'posts' && this.api.parameters.fields && _typeof(this.api.parameters.fields) === 'object' && this.api.parameters.fields.constructor === Array) {\n        for (var i = 0; i < this.api.parameters.fields.length; i++) {\n          if (!this.api.parameters.formats.includes(this.api.parameters.fields[i]) && this.api.parameters.fields[i].match(/(plaintext|mobiledoc|amp)/) || this.api.parameters.fields[i] == 'html' && this.api.parameters.formats.length > 0 && !this.api.parameters.formats.includes('html')) {\n            console.log(this.api.parameters.fields[i] + ' is not included in the formats parameter.');\n          }\n        }\n      }\n    }\n  }, {\n    key: \"checkKeys\",\n    value: function checkKeys() {\n      var _this4 = this;\n\n      if (!this.options.keys.every(function (elem) {\n        return _this4.api.parameters.fields.indexOf(elem) > -1;\n      })) {\n        console.log('Not all keys are in fields. Please add them.');\n      }\n\n      ;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      if (!this.checkGhostAPI() || !this.checkElements()) {\n        return false;\n      }\n\n      ;\n\n      if (this.development) {\n        this.checkFields();\n        this.checkFormats();\n        this.checkKeys();\n      }\n\n      ;\n      return true;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this5 = this;\n\n      if (!this.validate()) {\n        return;\n      }\n\n      if (this.trigger == 'focus') {\n        document.querySelectorAll(this.input)[0].addEventListener('focus', function (e) {\n          if (!_this5.check) {\n            _this5.fetch();\n          }\n\n          ;\n        });\n      } else if (this.trigger == 'load') {\n        window.onload = function () {\n          if (!_this5.check) {\n            _this5.fetch();\n          }\n\n          ;\n        };\n      }\n    }\n  }]);\n\n  return GhostSearch;\n}();"],"file":"ghost-search.js"}